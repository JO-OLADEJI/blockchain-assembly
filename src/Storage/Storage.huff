#define function updateHorseNumber(uint256) nonpayable returns()
#define function readNumberOfHorses() view returns(uint256)

#define constant SLOT_HORSE_NUMBER = FREE_STORAGE_POINTER()

#define macro MAIN() = takes(0) returns (0) {
    0x00
    calldataload
    0xe0                            // ----------------- STACK ------------------
    shr                             // [0x<selector>]

    dup1                            // [0x<selector>, 0x<selector>]
    __FUNC_SIG(updateHorseNumber)   // [0x<selector>, 0x<selector>, 0xcdfead2e]
    eq                              // [0x<selector>, 0x00 or 0x01]
    updateHorseNumber               // [0x<selector>, 0x00 or 0x01, 0x<jumpdest-pc>]
    jumpi                           // [0x<selector>]

    __FUNC_SIG(readNumberOfHorses)  // [0x<selector>, 0xcdfead2e]
    eq                              // [0x00 or 0x01]
    readNumberOfHorses              // [0x00 or 0x01, 0x<jumpdest-pc>]
    jumpi                           // []

    updateHorseNumber: UPDATE_HORSE_NUMBER()

    readNumberOfHorses: GET_HORSE_NUMBER()
}

#define macro UPDATE_HORSE_NUMBER() = takes(0) returns (0) {
    0x04                            // ----------------- STACK ------------------
    calldataload                    // [0x<uint256 argument>]
    [SLOT_HORSE_NUMBER]             // [0x<uint256 argument>, 0x...0]
    sstore                          // []
    stop
}

#define macro GET_HORSE_NUMBER() = takes(0) returns (0) {
    [SLOT_HORSE_NUMBER]             // [0x...0]
    sload                           // [0x01]
    0x00                            // [0x01, 0x00]
    mstore                          // []
    0x20                            // [0x20]
    0x00                            // [0x20, 0x00]
    return                          // []
}

// 0xcdfead2e0000000000000000000000000000000000000000000000000000000000000001
